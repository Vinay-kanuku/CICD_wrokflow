# This workflow is designed to perform Continuous Integration (CI) and Continuous Deployment (CD) for a Dockerized Flask application.
# It consists of two jobs: build-and-test and build-and-push.
name: CI/CD Dockerized Flask app
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  # The build-and-test job runs on every push or pull request to the main branch.
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4  # Check out the repository.
    - name: Set up Python 3.12.3  # Set up Python 3.12.3 environment.
      uses: actions/setup-python@v3
      with:
        python-version: "3.12.3"
    - name: Install dependencies  # Install required dependencies.
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8  # Lint the code using flake8.
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest  # Run tests using pytest.
      run: |
        pytest

  # The build-and-push job runs only after the build-and-test job is successful.
  build-and-push:
    needs: build-and-test  # This job depends on the build-and-test job.
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4  # Check out the repository.
    - name: Login to Docker Hub  # Login to Docker Hub using the secrets provided.
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Set up Docker Buildx  # Set up Docker Buildx for building and pushing Docker images.
      uses: docker/setup-buildx-action@v2
    - name: Build and push Docker image  # Build and push Docker image to Docker Hub.
      uses: docker/build-push-action@v4
      with:
        context: .  # Build the Docker image using the current directory as the build context.
        push: true  # Push the Docker image to Docker Hub.
        tags: ${{ secrets.DOCKER_USERNAME }}/flask-app:latest,${{ secrets.DOCKER_USERNAME }}/flask-app:${{ github.sha }}  # Set the Docker image tags.